:root {
  note: "Temporary value. JS will change it later if allowed. Also happens to be the current nav height.";
  --detected-nav-bar-height: 56px;
  --detected-h2-height: 56px;
  --detected-h3-height: 56px;
  --detected-h4-height: 56px;
  --alk-border-width: 1px;
  --functional-button-margin: .2rem;
  note: "v1 --alk-serious-bg: oklch(0.95 0.0165 244.89);";
  note: "v2 --alk-serious-bg: color-mix(in srgb, oklch(0.95 0.0165 244.89) 80%, black 10%);";
  --alk-serious-bg: var(--bs-gray-300);
}

* {
  scroll-margin-top: calc(var(--detected-nav-bar-height) + 2em);
}

menu {
  padding: 0;
  margin: 0;
}

note: {
  note: "Get sticky headers to look nice while sticky and at the bottom.";
}
header.sticky_scroll {
  note: "Our sticky header border radius only looks ok when the header background matches its surrounding background";
  background: var(--bs-body-bg);
  note: "Discuss: This border radius doesn't look great when traveling, but looks much better at the bottom than a square bottom";
  border-radius: var(--bs-border-radius);
}

.accordion header.sticky_scroll {
  box-shadow: 0px -20px 0px var(--alk-serious-bg);
}

section:has(header.sticky_scroll) .card,
section:has(header.sticky_scroll) .accordion {
  note: "Ensures bottom border is visible when the sticky header hits the bottom";
  position: relative;
  top: 2px;
}

header menu,
menu > * {
  display: inline-block;
}

#alkiln_test_output .accordion-header:has(h3),
#alkiln_test_output header:has(h2),
#alkiln_test_output header:has(h3),
#alkiln_test_output header:has(h4) {
  display: flex;
  justify-content: space-between;
}

#alkiln_test_output header.alert {
  display: block;
}

h2 {
  note: "Discuss this style in the context of other page styles";
  letter-spacing: .5px;
}

.da-field-container:has(*[disabled]) * {
  color: var(--bs-light-text);
}

#alkiln_test_output h2 {
  font-size: 1.5em
}

#alkiln_test_output h3 {
  font-size: 1.2em
}
#alkiln_test_output .accordion-header h3 {
  font-size: 1.1em;
}

#alkiln_test_output .accordion-header h3 {
  note: "Based on previous hard-coded accordion styles";
  padding-left: calc(1.5em * .5);
}

header .description {
  margin: 0;
  display: flex;
  align-items: center;
}

.functional_buttons_container {
  note: "Plural 'buttons'";
  margin-right: var(--functional-button-margin);
}
.functional_button_container {
  note: "Singular 'button'";
  margin-left: var(--functional-button-margin);
}

#alkiln_test_output .section {
  margin-bottom: 1em;
}

.functional_buttons_container {
  display: flex;
}

.output {
  background: var(--alk-serious-bg);
  border: var(--alk-border-width) solid var(--bs-secondary);
  margin-bottom: 1em;
}

#alkiln_test_output .output:has(.no_output) {
  background: var(--alk-serious-bg);
  border: var(--alk-border-width) solid var(--bs-secondary);
  margin-bottom: 1em;
}

#alkiln_test_output .setup_error.alert {
  max-height: unset;
}

#alkiln_test_output li {
}

#alkiln_test_output ol,
#alkiln_test_output ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

header:has(h2) {
  padding-bottom: .2em;
  padding-top: .2em;
}

header h2:has(div) {
  display: flex;
  align-items: center;
  margin: 0;
}

#alkiln_test_output .section:not(.metadata) [class*="col-"]:last-child,
#alkiln_test_output .section:not(.metadata) [class*="col "]:last-child {
  text-align: right;
}

.quick_buttons menu,
.quick_buttons nav {
  width: 100%;
}

#alkiln_test_output .quick_view .no_output ul {
  list-style: inherit;
  padding-left: 1em;
}

.alert-danger, .alert-warning {
  height: fit-content;
  max-height: fit-content;
}
.alert > :last-child {
  margin-bottom: 0;
}
#alkiln_test_output .alert ol,
#alkiln_test_output .alert ul {
  list-style: inside;
}

#alkiln_test_output .images {
  note: "Potentially make a 'carousel' of images or something when there are too many. E.g. when we add the ability to take a pic with every story table page.";
}

#alkiln_test_output .thumbnail {
  margin-bottom: 0.2em;
}

pre {
  border: var(--alk-border-width) solid var(--bs-dark);
  background: var(--alk-serious-bg);
  text-align: left;
}

.spinner-container {
  padding-bottom: 1rem;
}

iframe#alkiln_notifications {
  background: transparent;
  border: none;
  width: 100%;
}

.alk_no-gutters > * {
  padding: 0;
}

.quick_buttons.top {
  margin-bottom: 3rem;
}

.quick_buttons.top a,
.quick_buttons.top button {
  width: 100%;
}

.accordion {
  background: var(--bs-body-bg);
}

.output .accordion-item,
.output .accordion-header {
  background: inherit;
}

.accordion-button:not(.collapsed),
.accordion-button.collapsed {
  color: var(--bs-body-color);
}

h2 {
  note: "When siblings' containers overlap each other, we run into problems. It's difficult to allow regular text selection for an element when its z-index is lower than its siblings. When the sibling has clickable buttons, we prefer to block text selection to allow clicking the buttons. Messing with pointer events has been difficult.";
  neutralized: "z-index: 1;";
  neutralized: "position: relative;";
}

.sticky_scroll {
  position: sticky;
  z-index: 1;
}
.sticky_scroll:has(h2) {
  note: "Puts this element below the nav bar to keep it visible. I'm not sure where that navbar padding is set. I haven't found it on GitHub. Element .da-pad-for-navbar sets the padding for the spacer that keeps the nav bar from covering the rest of the page.";
  top: var(--detected-nav-bar-height);
}
.sticky_scroll:has(h3) {
  top: calc(var(--detected-nav-bar-height) + var(--detected-h2-height));
}
.sticky_scroll:has(h4) {
  top: calc(var(--detected-nav-bar-height) + var(--detected-h2-height) + var(--detected-h3-height));
}

.sticky_scroll:has(h2) {
  width: calc( 100% - (var(--alk-border-width) + var(--alk-border-width)) );
  margin-left: var(--alk-border-width);
}

section footer .functional_button_container {
  margin-top: var(--functional-button-margin);
  margin-left: 0;
}

.jump_destination {
  overflow: auto;
}